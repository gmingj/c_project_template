variables:
  RELEASE_URI: 'x-user@x-mail.com'
  BASE_PATH: '/home/x-user/workspace/release/x-project'
  VERTAG: 'latest'
  RUNNER: 'x-runner'

.utility_cd: &create_remote_dir
  - ssh $RELEASE_URI -o StrictHostKeyChecking=no mkdir -p $TARGET_PATH

.utility_mk: &cmake_build
  - cmake -B build $BUILD_FLAGS && cmake --build build

.utility_ul: &upload_to_remote
  - TARGET_PACK=AC-PM-${VERTAG}-amd64-linux.tar.gz
  - tar czf $TARGET_PACK build/dist/*
  - scp -r $TARGET_PACK build/cover build/doc/UserGuide.pdf $RELEASE_URI:$TARGET_PATH

.template_deploy: &tmpl_deploy
  stage: deploy
  script:
    - *create_remote_dir
    - *upload_to_remote
  tags:
    - $RUNNER

.template_notify: &tmpl_notify
  stage: notify
  script:
    - pip install pypandoc
    - scripts/sendmail $VERTAG $MAIL_TO
  retry: 2
  tags:
    - $RUNNER
  dependencies: []

stages:
  - build
  - test
  - deploy
  - notify

build:
  stage: build
  script:
    - BUILD_FLAGS='-DBUILD_SAMPLE=ON -DBUILD_DOC=ON'
    - *cmake_build
    - cmake --install build
  artifacts:
    expire_in: 5 mins
    paths:
      - build/dist/bin/x-bin
      - build/doc/UserGuide.pdf
  tags:
    - $RUNNER

test:
  stage: test
  script:
    - BUILD_FLAGS='-DCMAKE_BUILD_TYPE=Debug'
    - *cmake_build
    - cd build
    - make cover
  artifacts:
    expire_in: 5 mins
    paths:
      - build/cover
  tags:
    - $RUNNER

deploy_latest:
  before_script:
    - TARGET_PATH=$BASE_PATH/latest
  <<: *tmpl_deploy

deploy_release:
  before_script:
    - VERTAG=R$CI_COMMIT_TAG
    - TARGET_PATH=$BASE_PATH/$CI_COMMIT_TAG
  <<: *tmpl_deploy
  only:
    - tags

notify_latest:
  before_script:
    - MAIL_TO='x-user@x-mail.com'
  <<: *tmpl_notify
  except:
    - tags

notify_release:
  before_script:
    - MAIL_TO='x-users@x-mail.com'
    - VERTAG=R$CI_COMMIT_TAG
  <<: *tmpl_notify
  only:
    - tags

